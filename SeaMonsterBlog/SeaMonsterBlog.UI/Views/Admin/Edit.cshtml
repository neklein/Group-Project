
@model SeaMonsterBlog.UI.Models.CreateEditVM

@{
    ViewBag.Title = "Edit";
    ViewBag.Categories = Model.Categories;
    ViewBag.StaticPosts = Model.StaticPosts;
    ViewBag.SearchString = Model.SearchString;
}

@using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { @class = "form-inline", id = "frmUpload" }))
{
    @Html.ValidationSummary()
    @Html.AntiForgeryToken()
    <input type="text" name="Post.PostId" value="@Model.Post.PostId" class="hidden" />
        <input type="text" name="Post.PostId" value="@Model.Post.PostId" class="hidden" />
        <div style="padding-left:15px">
            @Html.CheckBoxFor(m => m.Post.IsForReview, new { @style = "visibility:hidden", id = "is-for-review" })
            <div class="row" style="padding-bottom:10px">
                <div class="col-md-5">
                    <label>Title</label>
                    @Html.TextBoxFor(model => model.Post.PostTitle, new { @class = "form-control", style = "width:600px" })
                    @Html.ValidationMessageFor(model => model.Post.PostTitle)
                </div>
                <div class="col-md-5">
                    <label>Author</label>
                    @Html.TextBoxFor(model => model.Post.Author, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Post.Author)
                </div>
                <div class="col-md-2">
                    <select name="Post.IsStatic" class="form-control" style="width:auto">
                        @{
                            if (Model.Post != null && Model.Post.IsStatic == false)
                            {
                                <text>
                                    <option value="false" selected>Blog Post</option>
                                    <option value="true">Static Page</option>
                                </text>
                            }
                            else if (Model.Post != null && Model.Post.IsStatic == true)
                            {
                                <text>
                                    <option value="false">Blog Post</option>
                                    <option value="true" selected>Static Page</option>
                                </text>
                            }
                            else
                            {
                                <option value="false" selected>Blog Post</option>
                                <option value="true">Static Page</option>
                            }
                        }

                    </select>
                </div>
            </div>
            <!-- This will contain your HtmlContent and use the TinyMCE editor-->
            @Html.TextAreaFor(model => model.Post.PostText)
            @Html.ValidationMessageFor(model => model.Post.PostText)
            <br />
            <div class="row">
                <div class="col-md-6">
                    @Html.TextBoxFor(m => Model.Post.HashtagString, new { @class = "form-control", style = "width:1000px", placeholder = "#hashtags" })
                    <input type="submit" class="btn btn-default" value="Save Work" id="main-button" />
                    <input type="button" class="btn btn-primary" value="Submit For Review" onclick="FlagAndSend()" />
                </div>
                <div class="col-md-6">
                    @Html.ListBoxFor(m => m.Post.SelectedCategories,
                                Model.Categories.Select(x => new SelectListItem { Text = x.CategoryTag, Value = x.CategoryID.ToString() }), new { @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="row" style="padding-top:20px;padding-left:20px;">
            <div class="col-md-6" style="border: 2px solid white;height:200px">
                <form class="form-inline">
                    <h4>Add an Image</h4>
                    <div class="form-group" style="padding-bottom:10px">
                        @Html.TextBoxFor(m => m.UploadedFile, new { type = "file", @class = "form-control" })
                    </div>
                    <div class="form-group" style="padding-bottom:10px">
                        <input type="text" name="ImageTitle" class="form-control" id="file-name" placeholder="enter new file name" style="width:500px">
                        <button type="button" class="btn btn-default" onclick="UploadImage()">Submit</button>
                    </div>
                </form>

            </div>
            <div class="col-md-6" style="border: 2px solid white;height:200px">
                <h4>Uploaded Images - click to insert in editor</h4>
                <select name="images" class="image-choice" size="6" style="width:500px">
                    @foreach (var i in Model.Images)
                {
                        <option>@i.ImageName</option>
                    }
                </select>
            </div>
        </div>
                            }
@section scripts {
    <script>
        tinymce.init({
            selector: 'textarea',
            height: 500,
            theme: 'modern',
            apply_source_formatting: true,
            relative_urls: false,
            plugins: 'print preview fullpage paste searchreplace autolink directionality code visualblocks importcss visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists textcolor wordcount spellchecker imagetools media  link contextmenu colorpicker textpattern help',
            toolbar1: 'formatselect | bold italic strikethrough forecolor backcolor | link | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | removeformat',
            image_advtab: true,
            templates: [
                { title: 'Test template 1', content: 'Test 1' },
                { title: 'Test template 2', content: 'Test 2' }
            ],
            content_css: [
                '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
                '//www.tinymce.com/css/codepen.min.css'
            ]
        });

        $(document).ready(function () {
            $("#is-for-review").attr("checked", false);
        });

        function UploadImage() {
            $("#main-button").click();
        }

        function FlagAndSend() {
            $("#is-for-review").attr("checked", true);
            $("#main-button").click();
        }

        $(function () {
            $(".image-choice").click(function (event) {
                var sr = "http://" + window.location.host + "/images/" + $(".image-choice option:selected").html();
                tinymce.activeEditor.insertContent('<img alt="broken" height="42" width="42" src="' + sr + '"/>');
            });
        });
    </script>
}